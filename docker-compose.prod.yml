services:
  web:
    image: ${DOCKERHUB_USERNAME}/myflask:latest
    environment:
      - FLASK_ENV=production
    expose:
      - "5000"
    restart: unless-stopped

  nginx:
    # ① 컨테이너 이름을 고정하면 renew 훅이 'nginx'라는 이름으로 접근할 수 있음
    container_name: nginx
    image: nginx:alpine
    depends_on:
      - web
    ports:
      - "80:80"
      - "443:443"
    volumes:
      # ② 호스트의 default.conf 파일을 템플릿으로 매핑
      - ./nginx/default.conf:/etc/nginx/templates/default.conf.template:ro
      - ./certbot/config:/etc/letsencrypt:ro
      - ./certbot/www:/var/www/certbot:ro
    environment:
      - DOMAIN=${DOMAIN}
    entrypoint: >
      sh -c "envsubst '$$DOMAIN' < /etc/nginx/templates/default.conf.template \
            > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
    restart: unless-stopped

  certbot:
    image: certbot/certbot
    command:
      - certonly
      - --webroot
      - --webroot-path=/var/www/certbot
      - --non-interactive
      - --agree-tos
      - --email
      - "${LETSENCRYPT_EMAIL}"
      - -d
      - "${DOMAIN}"
    volumes:
      - ./certbot/config:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    restart: "no"

  certbot-renew:
    image: certbot/certbot
    volumes:
      - ./certbot/config:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
      - /var/run/docker.sock:/var/run/docker.sock
    entrypoint: >
      sh -c "while true; do \
             certbot renew --quiet --deploy-hook 'docker exec nginx nginx -s reload'; \
             sleep 12h; \
           done"
    restart: unless-stopped
