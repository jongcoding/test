version: "3.9"

services:
  web:
    image: ${DOCKERHUB_USERNAME}/myflask:latest
    environment:
      - FLASK_ENV=production
    expose:
      - "5000"
    restart: unless-stopped

  nginx:
    container_name: nginx
    image: nginx:alpine
    depends_on:
      - web
    ports:
      - "80:80"
      - "443:443"
    volumes:
      # *항상* 동일 경로에 템플릿이 마운트 ↓
      - ./nginx/default.conf.template:/etc/nginx/templates/default.conf.template:ro
      - ./certbot/config:/etc/letsencrypt:ro
      - ./certbot/www:/var/www/certbot:ro
    environment:
      - DOMAIN=${DOMAIN}
    entrypoint:
      - sh
      - -exc
      - |
        # 템플릿에서 DOMAIN 치환 → conf 생성
        envsubst '$DOMAIN' < /etc/nginx/templates/default.conf.template \
          > /etc/nginx/conf.d/default.conf
        # nginx 실행 (포그라운드)
        exec nginx -g 'daemon off;'
    restart: unless-stopped

  certbot:
    image: certbot/certbot
    command:
      - certonly
      - --webroot
      - --webroot-path=/var/www/certbot
      - --non-interactive
      - --agree-tos
      - --email
      - "${LETSENCRYPT_EMAIL}"
      - -d
      - "${DOMAIN}"
    volumes:
      - ./certbot/config:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    restart: "no"

  certbot-renew:
    image: certbot/certbot
    volumes:
      - ./certbot/config:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
      - /var/run/docker.sock:/var/run/docker.sock
    entrypoint: >
      sh -c "while true; do
               certbot renew --quiet --deploy-hook 'docker exec nginx nginx -s reload';
               sleep 12h;
             done"
    restart: unless-stopped
