# 이 파일은 /etc/nginx/conf.d/*.conf 로 포함되므로 http{} 컨텍스트 안에서 해석됨

# ── Cache-Control 분기: 기본 no-store, 특정 자원만 캐시 허용 ─────────────
map $uri $cache_control {
    default                                     "no-store, no-cache, must-revalidate";
    =/robots.txt                                "public, max-age=3600";
    =/sitemap.xml                               "public, max-age=3600";
    ~* \.(css|js|png|jpg|jpeg|gif|svg|ico|woff2?)$ "public, max-age=31536000";
}

# 1) HTTP → HTTPS 리다이렉트 + ACME
server {
    listen 80;
    server_name $DOMAIN;

    # Let’s Encrypt HTTP-01
    location ^~ /.well-known/acme-challenge/ {
        root /var/www/certbot;
        allow all;
    }

    location / {
        return 301 https://$host$request_uri;
    }
}

# 2) HTTPS 서비스
server {
    listen 443 ssl;
    server_name $DOMAIN;

    ssl_certificate     /etc/letsencrypt/live/$DOMAIN/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/$DOMAIN/privkey.pem;
    include             /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam         /etc/letsencrypt/ssl-dhparams.pem;

    # ── 보안/프라이버시 헤더 ─────────────────────────────────────────────
    server_tokens off;  # 10036: Server 버전 숨김

    add_header X-Frame-Options "SAMEORIGIN" always;                       # 10020
    add_header X-Content-Type-Options "nosniff" always;                   # 10021
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "geolocation=(), camera=(), microphone=()" always;  # 10063
    add_header Content-Security-Policy "default-src 'self'; base-uri 'self'; frame-ancestors 'self'; form-action 'self'" always;  # 10038 (앱 맞춤 조정 권장)
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;  # 10035

    # Spectre 완화 (ZAP 90004 대응)
    add_header Cross-Origin-Opener-Policy  "same-origin" always;          # COOP
    add_header Cross-Origin-Resource-Policy "same-origin" always;         # CORP
    # 외부 CDN 리소스가 CORS/CORP를 제공하지 않으면 깨질 수 있으므로 준비되면 주석 해제
    # add_header Cross-Origin-Embedder-Policy "require-corp" always;      # COEP

    # 전역 Cache-Control (map으로 값 분기)
    add_header Cache-Control $cache_control always;

    # 필요 시 업스트림 민감 헤더 차단
    proxy_hide_header X-Powered-By;

    # ZAP가 404를 경고로 잡지 않도록 간단한 정적 응답 제공
    location = /robots.txt {
        default_type text/plain;
        return 200 "User-agent: *\nDisallow:\n";
        expires 1h;              # Cache-Control: max-age=3600 설정
    }
    location = /sitemap.xml {
        default_type application/xml;
        return 200 "<?xml version='1.0' encoding='UTF-8'?><urlset xmlns='http://www.sitemaps.org/schemas/sitemap/0.9'></urlset>";
        expires 1h;
    }

    # 정적 자원 캐시 (있다면)
    location ~* \.(css|js|png|jpg|jpeg|gif|svg|ico|woff2?)$ {
        expires 1y;
        try_files $uri @flask;
    }

    # 애플리케이션
    location / {
        proxy_pass http://web:5000;
        proxy_set_header Host              $host;
        proxy_set_header X-Real-IP         $remote_addr;
        proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # upstream 미스 시 플라스크로
    location @flask {
        proxy_pass http://web:5000;
    }
}
