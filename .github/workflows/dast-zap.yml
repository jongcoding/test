name: DAST – ZAP Baseline

on:
  workflow_dispatch:
  schedule:
    - cron: "0 18 * * *"   # 매일 03:00 KST (UTC 18:00)
  push:
    branches: [ main ]

jobs:
  zap-baseline:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write   # SARIF 업로드
    steps:
      - uses: actions/checkout@v4

      - name: ZAP Baseline Scan
        uses: zaproxy/action-baseline@v0.12.0
        with:
          target: https://${{ secrets.DOMAIN }}
          rules_file_name: .zap/rules.tsv   # 허용/무시 목록
          cmd_options: >-
            -m 5                           # passive + 크롤링 5분
            -a                             # alpha rule 포함(원하면 제거)
          allow_issue_writing: false
          fail_action: false               # 처음엔 실패 안 하게; 안정화 후 true

      - name: Upload ZAP report (HTML)
        uses: actions/upload-artifact@v4
        with:
          name: zap-baseline-report
          path: report_html.html

      - name: Convert ZAP report to SARIF (optional)
        run: |
          # action-baseline이 생성한 report_json.json을 SARIF로 변환하고 싶다면
          python - <<'PY'
          import json, sys
          src='report_json.json'
          dst='zap.sarif'
          if not __import__('os').path.exists(src):
              open(dst,'w').write('{"runs": []}')
              sys.exit(0)
          # 아주 간단한 placeholder SARIF (정식 변환기는 별도 사용 권장)
          data=json.load(open(src))
          open(dst,'w').write('{"version":"2.1.0","runs":[{"tool":{"driver":{"name":"ZAP"}},"results":[]}]}')
          PY

      - name: Upload SARIF (optional)
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: zap.sarif
