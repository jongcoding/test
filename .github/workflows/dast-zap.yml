name: DAST – ZAP Baseline

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  schedule:
    - cron: "0 18 * * *"   # 매일 03:00 KST

jobs:
  zap-baseline:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write

    steps:
      - name: Check out
        uses: actions/checkout@v4

      # 여기서 .zap/rules.tsv를 안전하게 생성 (탭 사용)
      - name: Ensure .zap/rules.tsv exists
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p .zap
          if [ ! -f .zap/rules.tsv ]; then
            {
              printf '# pluginId\taction\tnewConfidence(optional)\n'
              printf '10035\tWARN\n'    # HSTS not set
              printf '10020\tWARN\n'    # Anti-clickjacking
              printf '10021\tWARN\n'    # X-Content-Type-Options
              printf '10038\tWARN\n'    # CSP
              printf '10063\tWARN\n'    # Permissions-Policy
              printf '10049\tIGNORE\n'  # Storable and Cacheable
              printf '10015\tIGNORE\n'  # Re-examine Cache-control
              printf '90004\tIGNORE\n'  # Spectre
            } > .zap/rules.tsv
          fi
          echo "---- .zap/rules.tsv ----"
          cat .zap/rules.tsv | sed -n '1,20p'

      - name: ZAP Baseline Scan
        uses: zaproxy/action-baseline@v0.12.0
        with:
          target: https://${{ secrets.DOMAIN }}
          rules_file_name: .zap/rules.tsv
          # 5분 크롤링 + 알파 룰 (원치 않으면 -a 제거)
          cmd_options: "-m 5 -a"
          #  아티팩트 이름: 영문/숫자만 (400 회피)
          artifact_name: zapscan
          # 안정화 후 true로 바꾸면 DAST도 게이트로 사용 가능
          fail_action: false

      # 내부 업로드가 실패해도 수동 업로드로 백업
      - name: Upload ZAP reports (manual fallback)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: zapscan_files
          path: |
            report_html.html
            report_md.md
            report_json.json
          retention-days: 7
